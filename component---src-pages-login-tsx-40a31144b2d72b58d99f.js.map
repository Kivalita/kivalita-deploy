{"version":3,"sources":["webpack:///./src/services/base-url.js","webpack:///./src/services/auth-service.tsx","webpack:///./src/hooks/auth.tsx","webpack:///./src/services/service.tsx","webpack:///./src/services/token-service.tsx","webpack:///./src/components/pages/Login/style.ts","webpack:///./src/components/pages/Login/login.tsx","webpack:///./src/pages/login.tsx","webpack:///./src/hooks/input-hook.tsx"],"names":["module","exports","BaseUrl","AuthService","api","Service","login","email","password","this","post","grantType","then","response","accessToken","refreshToken","user","TokenService","storeToken","storeRefreshToken","storeUser","logout","clearToken","AuthContext","createContext","AuthProvider","children","useState","getToken","getUser","data","setData","signIn","useCallback","a","authService","signOut","Provider","value","useAuth","context","useContext","Error","isRefreshing","refreshSubscribers","axios","create","baseURL","base","interceptors","request","use","headers","error","status","Promise","resolve","reject","getNewToken","token","config","catch","auth","expirationDate","getRefreshToken","Email","Password","GrantType","resp","get","url","isStatusCodeSuccess","errorMessage","put","delete","localStorage","removeItem","LOCAL_STORAGE_USER","LOCAL_STORAGE_TOKEN","LOCAL_STORAGE_REFRESH_TOKEN","setItem","JSON","stringify","getItem","parse","Container","styled","section","Content","Background","LoginComponent","useInput","bindEmail","bind","reset","bindPass","event","preventDefault","navigate","alert","onSubmit","src","LogoImg","alt","type","placeholder","Login","initialValue","setValue","onChange","target"],"mappings":"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","file":"component---src-pages-login-tsx-40a31144b2d72b58d99f.js","sourcesContent":["module.exports = {\r\n\tBaseUrl: \"https://kivalitaapi.azurewebsites.net/api/\",\r\n\t// BaseUrl: \"http://localhost:5000/api/\",\r\n}\r\n","import Service from \"./service\"\r\nimport TokenService from \"./token-service\"\r\n\r\ninterface IReponse {\r\n\taccessToken: string\r\n\texpirationDate: string\r\n\trefreshToken: string\r\n\tuser: object\r\n}\r\n\r\nclass AuthService {\r\n\tprivate api = new Service()\r\n\r\n\tlogin(email: string, password: string) {\r\n\t\treturn this.api\r\n\t\t\t.post<IReponse>(\"user/auth\", {\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t\tgrantType: \"password\",\r\n\t\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\tconst { accessToken, refreshToken, user } = response\r\n\r\n\t\t\t\tTokenService.storeToken(accessToken)\r\n\t\t\t\tTokenService.storeRefreshToken(refreshToken)\r\n\t\t\t\tTokenService.storeUser(user)\r\n\r\n\t\t\t\treturn response\r\n\t\t\t})\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tTokenService.clearToken()\r\n\t}\r\n}\r\n\r\nexport default AuthService\r\n","import React, { createContext, useCallback, useState, useContext } from \"react\"\r\n\r\nimport AuthService from \"../services/auth-service\"\r\nimport TokenService from \"../services/token-service\"\r\n\r\ninterface IAuthState {\r\n\taccessToken: string\r\n\tuser: object\r\n}\r\n\r\ninterface ISignInCreadentials {\r\n\temail: string\r\n\tpassword: string\r\n}\r\n\r\ninterface IAuthContextData {\r\n\tuser: {\r\n\t\tid: string\r\n\t\temail: string\r\n\t\tfirstName: string\r\n\t\tlastName: string\r\n\t}\r\n\tsignIn(credentials: ISignInCreadentials): Promise<void>\r\n\tsignOut(): void\r\n}\r\n\r\nconst AuthContext = createContext<IAuthContextData>({} as IAuthContextData)\r\n\r\nconst AuthProvider: React.FC = ({ children }) => {\r\n\tconst [data, setData] = useState<IAuthState>(() => {\r\n\t\tconst accessToken = TokenService.getToken()\r\n\t\tconst user = TokenService.getUser()\r\n\r\n\t\tif (accessToken && user) {\r\n\t\t\treturn { accessToken, user }\r\n\t\t}\r\n\r\n\t\treturn {} as IAuthState\r\n\t})\r\n\r\n\tconst signIn = useCallback(async ({ email, password }) => {\r\n\t\tconst authService = new AuthService()\r\n\t\tconst response = await authService.login(email, password)\r\n\r\n\t\tconst { accessToken, user } = response\r\n\r\n\t\tsetData({ accessToken, user })\r\n\t}, [])\r\n\r\n\tconst signOut = useCallback(() => {\r\n\t\tTokenService.clearToken()\r\n\r\n\t\tsetData({} as IAuthState)\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\r\n\t\t\t{children}\r\n\t\t</AuthContext.Provider>\r\n\t)\r\n}\r\n\r\nfunction useAuth(): IAuthContextData {\r\n\tconst context = useContext(AuthContext)\r\n\r\n\tif (!context) {\r\n\t\tthrow new Error(\"useAuth must be used within an AuthProvider\")\r\n\t}\r\n\r\n\treturn context\r\n}\r\n\r\nexport { AuthProvider, useAuth }\r\n","import axios from \"axios\"\r\nimport TokenService from \"./token-service\"\r\n\r\nimport * as base from \"./base-url.js\"\r\n\r\ninterface IResponse<T> {\r\n\tstatusCode: number\r\n\tisStatusCodeSuccess: boolean\r\n\tdata: T\r\n\terrorMessage: string\r\n}\r\n\r\ninterface IAuth {\r\n\taccessToken: string\r\n\texpirationDate: string\r\n\trefreshToken: string\r\n\tEmail: string\r\n\tPassword: string\r\n\tGrantType: string\r\n}\r\n\r\nclass Service<T> {\r\n\tisRefreshing = false\r\n\trefreshSubscribers = []\r\n\r\n\tapi = axios.create({\r\n\t\tbaseURL: base.BaseUrl,\r\n\t})\r\n\r\n\tconstructor() {\r\n\t\tthis.api.interceptors.request.use(request => {\r\n\t\t\trequest.headers[\"Authorization\"] = `Bearer ${TokenService.getToken()}`\r\n\t\t\treturn request\r\n\t\t})\r\n\t\tthis.api.interceptors.response.use(\r\n\t\t\tresponse => {\r\n\t\t\t\treturn response\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tif (error.response?.status !== 401) {\r\n\t\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\t\treject(error)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.getNewToken()\r\n\t\t\t\t\t.then((token: string) => {\r\n\t\t\t\t\t\tconst config = error.config\r\n\t\t\t\t\t\tconfig.headers[\"Authorization\"] = `Bearer ${token}`\r\n\r\n\t\t\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\taxios\r\n\t\t\t\t\t\t\t\t.request(config)\r\n\t\t\t\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\t\t\t\tresolve(response)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\t\t\treject(error)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error: any) => {\r\n\t\t\t\t\t\tPromise.reject(error)\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tgetNewToken() {\r\n\t\tconst auth: IAuth = {\r\n\t\t\taccessToken: \"\",\r\n\t\t\texpirationDate: \"\",\r\n\t\t\trefreshToken: TokenService.getRefreshToken() || \"\",\r\n\t\t\tEmail: \"\",\r\n\t\t\tPassword: \"\",\r\n\t\t\tGrantType: \"refresh_token\",\r\n\t\t}\r\n\r\n\t\treturn this.post<IAuth>(\"User/auth\", auth, {}).then(resp => {\r\n\t\t\tTokenService.storeToken(resp.accessToken)\r\n\t\t\tTokenService.storeRefreshToken(resp.refreshToken)\r\n\t\t\treturn resp.accessToken\r\n\t\t})\r\n\t}\r\n\r\n\tasync get<T>(url: string, headers?: {}) {\r\n\t\treturn await this.api\r\n\t\t\t.get<IResponse<T>>(url, {\r\n\t\t\t\theaders: headers,\r\n\t\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.data.isStatusCodeSuccess) {\r\n\t\t\t\t\treturn response.data.data\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow response.data.errorMessage\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\tasync put<T>(url: string, data: T, headers?: {}) {\r\n\t\treturn await this.api\r\n\t\t\t.put<IResponse<T>>(url, data, {\r\n\t\t\t\theaders: headers,\r\n\t\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.data.isStatusCodeSuccess) {\r\n\t\t\t\t\treturn response.data.data\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow response.data.errorMessage\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\tasync post<T>(url: string, data: object, headers?: {}) {\r\n\t\treturn await this.api\r\n\t\t\t.post<IResponse<T>>(url, data, {\r\n\t\t\t\theaders: headers,\r\n\t\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.data.isStatusCodeSuccess) {\r\n\t\t\t\t\treturn response.data.data\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow response.data.errorMessage\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\tasync delete<T>(url: string, headers?: {}) {\r\n\t\treturn await this.api\r\n\t\t\t.delete<IResponse<T>>(url, {\r\n\t\t\t\theaders: headers,\r\n\t\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.data.isStatusCodeSuccess) {\r\n\t\t\t\t\treturn response.data.data\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow response.data.errorMessage\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n}\r\n\r\nexport default Service\r\n","class TokenService {\r\n\tprivate static readonly LOCAL_STORAGE_USER = \"user\"\r\n\tprivate static readonly LOCAL_STORAGE_TOKEN = \"token\"\r\n\tprivate static readonly LOCAL_STORAGE_REFRESH_TOKEN = \"refresh_token\"\r\n\r\n\tpublic static clearToken() {\r\n\t\tif (typeof localStorage != \"undefined\") {\r\n\t\t\tlocalStorage.removeItem(this.LOCAL_STORAGE_USER)\r\n\t\t\tlocalStorage.removeItem(this.LOCAL_STORAGE_TOKEN)\r\n\t\t\tlocalStorage.removeItem(this.LOCAL_STORAGE_REFRESH_TOKEN)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static storeUser(user: object) {\r\n\t\tif (typeof localStorage != \"undefined\") {\r\n\t\t\tlocalStorage.setItem(this.LOCAL_STORAGE_USER, JSON.stringify(user))\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static storeToken(token: string) {\r\n\t\tif (typeof localStorage != \"undefined\") {\r\n\t\t\tlocalStorage.setItem(this.LOCAL_STORAGE_TOKEN, token)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static storeRefreshToken(refreshToken: string) {\r\n\t\tif (typeof localStorage != \"undefined\") {\r\n\t\t\tlocalStorage.setItem(this.LOCAL_STORAGE_REFRESH_TOKEN, refreshToken)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getRefreshToken() {\r\n\t\tif (typeof localStorage != \"undefined\") {\r\n\t\t\treturn localStorage.getItem(this.LOCAL_STORAGE_REFRESH_TOKEN)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getToken() {\r\n\t\tif (typeof localStorage != \"undefined\") {\r\n\t\t\treturn localStorage.getItem(this.LOCAL_STORAGE_TOKEN)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getUser() {\r\n\t\tif (typeof localStorage != \"undefined\") {\r\n\t\t\tconst user = localStorage.getItem(this.LOCAL_STORAGE_USER)\r\n\t\t\treturn JSON.parse(user)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default TokenService\r\n","import styled from \"styled-components\"\r\n\r\nexport const Container = styled.section`\r\n\theight: 100vh;\r\n\tdisplay: flex;\r\n\talign-items: stretch;\r\n`\r\n\r\nexport const Content = styled.section`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\r\n\tplace-content: center;\r\n\twidth: 100%;\r\n\tmax-width: 700px;\r\n\r\n\tform {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 340px;\r\n\r\n\t\tinput {\r\n\t\t\tbackground: #232129;\r\n\t\t\tborder-radius: 10px;\r\n\t\t\tborder: 2px solid #232129;\r\n\t\t\tpadding: 16px;\r\n\t\t\twidth: 100%;\r\n\t\t\tcolor: #f4ede8;\r\n\t\t\tflex: 1;\r\n\t\t\tborder: 0;\r\n\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\r\n\t\t\t& + input {\r\n\t\t\t\tmargin-top: 8px;\r\n\t\t\t}\r\n\r\n\t\t\t&::placeholder {\r\n\t\t\t\tcolor: #666360;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbutton {\r\n\t\t\tbackground: #13414f;\r\n\t\t\theight: 56px;\r\n\t\t\tborder-radius: 10px;\r\n\t\t\tborder: 0;\r\n\t\t\toutline: 0;\r\n\t\t\tpadding: 0 16px;\r\n\t\t\tcolor: #fff;\r\n\t\t\twidth: 100%;\r\n\t\t\tfont-weight: 500;\r\n\t\t\tmargin-top: 16px;\r\n\t\t\ttransition: background-color 0.2s;\r\n\t\t}\r\n\r\n\t\timg {\r\n\t\t\tmargin-bottom: 80px;\r\n\t\t}\r\n\t}\r\n`\r\n\r\nexport const Background = styled.section`\r\n\tflex: 1;\r\n\tbackground: url(\"https://www.kivalitaconsulting.com/wp-content/uploads/2019/06/leao-sobre-21-2-1.png\")\r\n\t\tno-repeat center;\r\n\tbackground-position: 120px 140px;\r\n\tbackground-color: #13414f;\r\n\tbackground-size: initial;\r\n`\r\n","import React, { SyntheticEvent } from \"react\"\r\nimport { navigate } from \"gatsby\"\r\n\r\nimport { useAuth } from \"../../../hooks/auth\"\r\nimport { Container, Content, Background } from \"./style\"\r\n\r\nimport LogoImg from \"../../../assets/logo-hori.svg\"\r\nimport { useInput } from \"../../../hooks/input-hook\"\r\n\r\nconst LoginComponent: React.FC = () => {\r\n\tconst { value: email, bind: bindEmail, reset: resetEmail } = useInput()\r\n\tconst { value: password, bind: bindPass, reset: resetPass } = useInput()\r\n\r\n\tconst { signIn } = useAuth()\r\n\r\n\tasync function handleSubmit(event: SyntheticEvent) {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tif (email && password) {\r\n\t\t\ttry {\r\n\t\t\t\tawait signIn({ email, password })\r\n\r\n\t\t\t\tnavigate(\"/\")\r\n\t\t\t} catch {\r\n\t\t\t\talert(\"Erro ao fazer login\")\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Content>\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<img src={LogoImg} alt=\"Logo Kivalita\" />\r\n\r\n\t\t\t\t\t<input type=\"text\" placeholder=\"E-mail\" {...bindEmail} />\r\n\r\n\t\t\t\t\t<input type=\"password\" placeholder=\"Senha\" {...bindPass} />\r\n\r\n\t\t\t\t\t<button>Entrar</button>\r\n\t\t\t\t</form>\r\n\t\t\t</Content>\r\n\t\t\t<Background />\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default LoginComponent\r\n","import React from \"react\"\r\nimport LoginComponent from \"../components/pages/Login/login\"\r\nimport { AuthProvider } from \"../hooks/auth\"\r\n\r\nconst Login: React.FC = () => (\r\n\t<AuthProvider>\r\n\t\t<LoginComponent />\r\n\t</AuthProvider>\r\n)\r\n\r\nexport default Login\r\n","import { useState } from \"react\"\r\n\r\nexport const useInput = (initialValue: any = \"\") => {\r\n\tconst [value, setValue] = useState(initialValue)\r\n\r\n\treturn {\r\n\t\tvalue,\r\n\t\tsetValue,\r\n\t\treset: () => setValue(\"\"),\r\n\t\tbind: {\r\n\t\t\tvalue,\r\n\t\t\tonChange: (event: any) => {\r\n\t\t\t\tif (typeof event === \"string\") {\r\n\t\t\t\t\tsetValue(event)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetValue(event.target.value)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t}\r\n}\r\n"],"sourceRoot":""}