{"version":3,"sources":["webpack:///./src/components/utils/Button/index.tsx","webpack:///./src/components/utils/IntroductionContent/styles.ts","webpack:///./src/components/utils/IntroductionContent/index.tsx","webpack:///./src/services/job-service.tsx","webpack:///./src/components/pages/Jobs/components/ModalForm/index.tsx","webpack:///./src/components/pages/Jobs/components/JobCard.tsx","webpack:///./src/components/pages/Jobs/style.ts","webpack:///./src/components/pages/Jobs/components/JobCardLoad.tsx","webpack:///./src/components/pages/Jobs/index.tsx","webpack:///./src/components/pages/Job/style.ts","webpack:///./src/components/pages/Job/index.tsx","webpack:///./src/pages/jobs.tsx"],"names":["Button","props","title","includes","to","className","style","backgroundColor","bgColor","color","textColor","fontFamily","padding","fontSize","fontWeight","width","id","type","data-toggle","dataToggle","data-target","dataTarget","Container","styled","div","Subtitle","h3","Title","h2","IntroductionContent","subtitle","content","JobService","api","Service","list","this","get","delete","create","image","published","userId","post","description","imageData","authorId","update","imageId","put","savePreview","job","localStorage","setItem","JSON","stringify","getPreview","article","getItem","parse","ModalForm","dataModal","showModal","onCloseModal","handleSubmit","handlePreview","editor","useRef","useInput","value","setTitle","setValue","bindTitle","bind","resetTitle","reset","setContent","bindContent","resetContent","useState","setPublished","setImage","imageBase64","setImageBase64","useEffect","save","event","a","preventDefault","open","onClose","center","Form","onSubmit","minWidth","Group","Label","Control","onChange","target","file","files","convertImageToBase64","then","base64","undefined","ref","Check","label","checked","variant","onClick","jobImage","imageUrl","JobCard","editJob","deleteJob","Card","marginTop","UserLogged","Header","OverlayTrigger","placement","overlay","Tooltip","size","Img","height","objectFit","src","Body","JobCardLoad","count","JobsComponent","user","useAuth","setDataModal","setShowModal","loading","setLoading","jobs","setJobs","jobService","openModal","jodFound","author","useCallback","jobsFilter","filter","getJobs","titleCallback","response","data","window","ButtonBox","handleClick","map","key","JobComponent","setJob","useTranslation","t","i18","getJob","SEO","Banner","titlePage","alt","dangerouslySetInnerHTML","__html","href","ShareButtons","url","location","textAlign","Jobs","i18n","name","isActive","breadCrumbList","setBreadCrumb","newBreadCrumb","push","length","pop","Layout","basepath","path","Job"],"mappings":"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","file":"component---src-pages-jobs-tsx-2bc7184227276e3a4372.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nexport interface IButton {\r\n\ttitle: string\r\n\tbgColor: string\r\n\ttextColor: string\r\n\tfontFamily: string\r\n\tpadding: string\r\n\tfontSize: number\r\n\tfontWeight: number\r\n\tid?: string\r\n\tdataToggle?: string\r\n\tdataTarget?: string\r\n\twidth?: string\r\n}\r\n\r\nconst Button = (props: IButton) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{props.title.includes(\"quote\") || props.title.includes(\"orçamento\") ? (\r\n\t\t\t\t<Link to=\"/orcamento\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn btn-cta\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: `${props.bgColor}`,\r\n\t\t\t\t\t\t\tcolor: `${props.textColor}`,\r\n\t\t\t\t\t\t\tfontFamily: `${props.fontFamily}, sans-serif`,\r\n\t\t\t\t\t\t\tpadding: `${props.padding}`,\r\n\t\t\t\t\t\t\tfontSize: `${props.fontSize}px`,\r\n\t\t\t\t\t\t\tfontWeight: `${props.fontWeight}`,\r\n\t\t\t\t\t\t\twidth: `${props.width}`,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tid={props.id}\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tdata-toggle={props.dataToggle}\r\n\t\t\t\t\t\tdata-target={props.dataTarget}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{props.title}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Link>\r\n\t\t\t) : (\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-cta\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: `${props.bgColor}`,\r\n\t\t\t\t\t\tcolor: `${props.textColor}`,\r\n\t\t\t\t\t\tfontFamily: `${props.fontFamily}, sans-serif`,\r\n\t\t\t\t\t\tpadding: `${props.padding}`,\r\n\t\t\t\t\t\tfontSize: `${props.fontSize}px`,\r\n\t\t\t\t\t\tfontWeight: `${props.fontWeight}`,\r\n\t\t\t\t\t\twidth: `${props.width}`,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tid={props.id}\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tdata-toggle={props.dataToggle}\r\n\t\t\t\t\tdata-target={props.dataTarget}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.title}\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Button\r\n","import styled from \"styled-components\"\r\n\r\nexport const Container = styled.div`\r\n\tbackground-color: transparent;\r\n\tpadding: 32px 64px;\r\n\tmargin-top: 62px;\r\n\ttext-align: center;\r\n\r\n\t@media (max-width: 576px) {\r\n\t\tpadding: 32px 16px;\r\n\t}\r\n\r\n\tp {\r\n\t\tcolor: #444;\r\n\t\tfont-family: \"Montserrat\", Sans-serif;\r\n\t\tfont-size: 18px;\r\n\t\tfont-weight: 300;\r\n\t\tline-height: 1.6em;\r\n\t}\r\n`\r\n\r\nexport const Subtitle = styled.h3`\r\n\tcolor: #000000;\r\n\tfont-family: \"Montserrat\", Sans-serif;\r\n\tfont-size: 12px;\r\n\tfont-weight: 300;\r\n\ttext-transform: uppercase;\r\n\tletter-spacing: 7px;\r\n`\r\n\r\nexport const Title = styled.h2`\r\n\tcolor: #444;\r\n\tfont-family: \"Montserrat\", Sans-serif;\r\n\tfont-size: 35px;\r\n\tfont-weight: 600;\r\n\tmargin-top: 24px;\r\n\tposition: relative;\r\n\tmargin-bottom: 60px;\r\n\r\n\t::before {\r\n\t\tcontent: \"\";\r\n\t\tmargin: 0 auto;\r\n\t\tposition: absolute;\r\n\t\theight: 2px;\r\n\t\twidth: 100px;\r\n\t\tbackground-color: #f4bf8c;\r\n\t\tbottom: -30px;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t}\r\n`\r\n","import React from \"react\"\r\n\r\nimport { Container, Subtitle, Title } from \"./styles\"\r\n\r\ninterface IProps {\r\n\ttitle: string\r\n\tsubtitle?: string\r\n\tcontent?: string\r\n}\r\n\r\nconst IntroductionContent = ({ title, subtitle, content }: IProps) => {\r\n\treturn (\r\n\t\t<Container className=\"container\">\r\n\t\t\t<Subtitle>{subtitle}</Subtitle>\r\n\t\t\t<Title>{title}</Title>\r\n\t\t\t<p>{content}</p>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default IntroductionContent\r\n","import Service from \"./service\"\r\nimport { IJobFormData, IJobs } from \"../interfaces\"\r\n\r\nclass JobService {\r\n\tprivate api = new Service()\r\n\r\n\tpublic list<T>(): Promise<T> {\r\n\t\treturn this.api.get(\"job\")\r\n\t}\r\n\r\n\tpublic get<T>(id: number): Promise<T> {\r\n\t\treturn this.api.get(`job/${id}`)\r\n\t}\r\n\r\n\tpublic delete(id: number): Promise<void> {\r\n\t\treturn this.api.delete(`job/${id}`)\r\n\t}\r\n\r\n\tpublic create({\r\n\t\ttitle,\r\n\t\timage,\r\n\t\tcontent,\r\n\t\tpublished,\r\n\t\tuserId = \"0\",\r\n\t}: IJobFormData) {\r\n\t\treturn this.api.post(\"job\", {\r\n\t\t\ttitle,\r\n\t\t\tdescription: content,\r\n\t\t\tpublished,\r\n\t\t\timageData: image,\r\n\t\t\tauthorId: userId,\r\n\t\t})\r\n\t}\r\n\r\n\tpublic update({\r\n\t\tid,\r\n\t\ttitle,\r\n\t\timage,\r\n\t\timageId,\r\n\t\tcontent,\r\n\t\tpublished,\r\n\t\tuserId = \"0\",\r\n\t}: IJobFormData) {\r\n\t\treturn this.api.put(`job/${id}`, {\r\n\t\t\tid,\r\n\t\t\ttitle,\r\n\t\t\timageId,\r\n\t\t\timageData: image,\r\n\t\t\tdescription: content,\r\n\t\t\tpublished,\r\n\t\t\tauthorId: userId,\r\n\t\t})\r\n\t}\r\n\r\n\tpublic savePreview(job: IJobs) {\r\n\t\tif (typeof localStorage != \"undefined\") {\r\n\t\t\tlocalStorage.setItem(\"jobPreview\", JSON.stringify(job))\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getPreview(): IJobs | undefined {\r\n\t\tif (typeof localStorage != \"undefined\") {\r\n\t\t\tconst article = localStorage.getItem(\"jobPreview\")\r\n\r\n\t\t\tif (!article) {\r\n\t\t\t\treturn undefined\r\n\t\t\t}\r\n\r\n\t\t\treturn JSON.parse(article)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default JobService\r\n","import React, { useRef, useState, useEffect } from \"react\"\r\nimport { Form, Button } from \"react-bootstrap\"\r\nimport { Modal } from \"react-responsive-modal\"\r\nimport JoditEditor from \"jodit-react\"\r\n\r\nimport { useInput } from \"../../../../../hooks/input-hook\"\r\nimport convertImageToBase64 from \"../../../../utils/convertImageToBase64\"\r\nimport { IJobFormData } from \"../../../../../interfaces\"\r\n\r\ninterface IProps {\r\n\tdataModal: IJobFormData\r\n\tshowModal: boolean\r\n\tonCloseModal(): void\r\n\thandleSubmit(data: any): void\r\n\thandlePreview(data: any): void\r\n}\r\n\r\nexport default function ModalForm(props: IProps) {\r\n\tconst {\r\n\t\tdataModal,\r\n\t\tshowModal,\r\n\t\tonCloseModal,\r\n\t\thandleSubmit,\r\n\t\thandlePreview,\r\n\t} = props\r\n\tconst editor = useRef(null)\r\n\r\n\tconst {\r\n\t\tvalue: title,\r\n\t\tsetValue: setTitle,\r\n\t\tbind: bindTitle,\r\n\t\treset: resetTitle,\r\n\t} = useInput()\r\n\tconst {\r\n\t\tvalue: content,\r\n\t\tsetValue: setContent,\r\n\t\tbind: bindContent,\r\n\t\treset: resetContent,\r\n\t} = useInput()\r\n\tconst [published, setPublished] = useState<boolean>(false)\r\n\tconst [image, setImage] = useState(\"\")\r\n\tconst [imageBase64, setImageBase64] = useState<string | ArrayBuffer | null>()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dataModal && dataModal.id) {\r\n\t\t\tsetTitle(dataModal.title)\r\n\t\t\tsetContent(dataModal.content)\r\n\t\t\tsetImageBase64(dataModal.image)\r\n\t\t\tsetPublished(dataModal.published)\r\n\t\t} else {\r\n\t\t\tresetTitle()\r\n\t\t\tresetContent()\r\n\t\t\tsetPublished(false)\r\n\t\t\tsetImage(\"\")\r\n\t\t\tsetImageBase64(\"\")\r\n\t\t}\r\n\t}, [])\r\n\r\n\tfunction handleImage(event: any) {\r\n\t\tsetImage(event.target.value)\r\n\t\tconst file = event.target.files[0]\r\n\r\n\t\tconvertImageToBase64(file).then(base64 => setImageBase64(base64))\r\n\t\tdataModal.imageId = undefined\r\n\t}\r\n\r\n\tfunction handlePublished(event: any) {\r\n\t\tsetPublished(event.target.checked)\r\n\t}\r\n\r\n\tconst save = async (event: any) => {\r\n\t\tevent.preventDefault()\r\n\t\tawait handleSubmit({\r\n\t\t\tid: dataModal.id,\r\n\t\t\ttitle,\r\n\t\t\timage: imageBase64,\r\n\t\t\tcontent,\r\n\t\t\tpublished,\r\n\t\t})\r\n\r\n\t\tresetContent()\r\n\t\tresetTitle()\r\n\t\tonCloseModal()\r\n\t}\r\n\r\n\tfunction preview() {\r\n\t\thandlePreview({\r\n\t\t\tid: \"preview\",\r\n\t\t\ttitle: title,\r\n\t\t\tdescription: content,\r\n\t\t\tpublished,\r\n\t\t\tjobImage: {\r\n\t\t\t\timageUrl: dataModal.imageUrl,\r\n\t\t\t},\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal open={showModal} onClose={onCloseModal} center>\r\n\t\t\t<Form onSubmit={save} style={{ minWidth: \"700px\" }}>\r\n\t\t\t\t<h3>Adicionar vaga</h3>\r\n\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>Titutlo</Form.Label>\r\n\t\t\t\t\t<Form.Control type=\"text\" {...bindTitle} />\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>Imagem principal</Form.Label>\r\n\t\t\t\t\t<Form.Control type=\"file\" value={image} onChange={handleImage} />\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>Conteúdo</Form.Label>\r\n\t\t\t\t\t<JoditEditor ref={editor} {...bindContent} />\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Check\r\n\t\t\t\t\ttype=\"switch\"\r\n\t\t\t\t\tlabel=\"Publicar vaga\"\r\n\t\t\t\t\tid=\"custom-switch\"\r\n\t\t\t\t\tclassName=\"mb-4\"\r\n\t\t\t\t\tchecked={published}\r\n\t\t\t\t\tonChange={handlePublished}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Button variant=\"primary\" type=\"submit\" className=\"mr-2\">\r\n\t\t\t\t\tSalvar\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"link\" type=\"button\" onClick={preview}>\r\n\t\t\t\t\tVisualizar\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</Modal>\r\n\t)\r\n}\r\n","import React from \"react\"\r\nimport { FaRegEdit, FaRegTrashAlt, FaCircle } from \"react-icons/fa\"\r\nimport { Card, Tooltip, OverlayTrigger } from \"react-bootstrap\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport UserLogged from \"../../../utils/UserLogged\"\r\nimport { translate } from \"../../../utils/translate\"\r\n\r\ninterface IProps {\r\n\tid: number\r\n\ttitle: string\r\n\tdescription: string\r\n\tpublished: boolean\r\n\tjobImage: {\r\n\t\timageUrl: string\r\n\t}\r\n\teditJob(id: number): void\r\n\tdeleteJob(id: number): void\r\n}\r\n\r\nexport default function JobCard({\r\n\teditJob,\r\n\tdeleteJob,\r\n\tid,\r\n\ttitle,\r\n\tpublished,\r\n\tjobImage,\r\n}: IProps) {\r\n\tconst handleEdit = () => {\r\n\t\teditJob(id)\r\n\t}\r\n\tconst handleDelete = () => {\r\n\t\tdeleteJob(id)\r\n\t}\r\n\treturn (\r\n\t\t<Card style={{ width: \"100%\", marginTop: \"24px\" }}>\r\n\t\t\t<UserLogged>\r\n\t\t\t\t<Card.Header>\r\n\t\t\t\t\t<small className=\"text-muted float-left\">\r\n\t\t\t\t\t\t<OverlayTrigger\r\n\t\t\t\t\t\t\tplacement={\"top\"}\r\n\t\t\t\t\t\t\toverlay={\r\n\t\t\t\t\t\t\t\t<Tooltip id=\"tooltip-job\">\r\n\t\t\t\t\t\t\t\t\t{published ? \"Publicado\" : \"Não publicado\"}\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FaCircle color={published ? \"green\" : \"red\"} />\r\n\t\t\t\t\t\t</OverlayTrigger>\r\n\t\t\t\t\t</small>\r\n\t\t\t\t\t<small className=\"text-muted float-right\">\r\n\t\t\t\t\t\t<FaRegEdit size={20} onClick={handleEdit} />\r\n\t\t\t\t\t\t<FaRegTrashAlt\r\n\t\t\t\t\t\t\tonClick={handleDelete}\r\n\t\t\t\t\t\t\tclassName=\"ml-3\"\r\n\t\t\t\t\t\t\tsize={20}\r\n\t\t\t\t\t\t\tcolor={\"#CD7165\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</Card.Header>\r\n\t\t\t</UserLogged>\r\n\r\n\t\t\t<Link to={`/jobs/${id}`}>\r\n\t\t\t\t<Card.Img\r\n\t\t\t\t\tstyle={{ height: \"170px\", objectFit: \"cover\" }}\r\n\t\t\t\t\tvariant=\"top\"\r\n\t\t\t\t\tsrc={jobImage.imageUrl}\r\n\t\t\t\t/>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title>{title}</Card.Title>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Link>\r\n\t\t</Card>\r\n\t)\r\n}\r\n","import styled from \"styled-components\"\r\n\r\nexport const Container = styled.div`\r\n\tmargin-bottom: 40px;\r\n\r\n\ta {\r\n\t\tcolor: #333;\r\n\t}\r\n\ta:hover {\r\n\t\ttext-decoration: none;\r\n\t}\r\n`\r\n","import React from \"react\"\r\nimport Skeleton from \"react-loading-skeleton\"\r\nimport { Card } from \"react-bootstrap\"\r\n\r\nexport default function JobCardLoad() {\r\n\treturn (\r\n\t\t<Card style={{ width: \"100%\", marginTop: \"24px\" }}>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Skeleton width={\"100%\"} height={180} />\r\n\t\t\t\t<Card.Title style={{ marginTop: \"24px\" }}>\r\n\t\t\t\t\t<Skeleton count={2} />\r\n\t\t\t\t</Card.Title>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t)\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport { FaPlus } from \"react-icons/fa\"\r\n\r\nimport \"react-responsive-modal/styles.css\"\r\n\r\nimport JobService from \"../../../services/job-service\"\r\nimport { IJobFormData, IJobs } from \"../../../interfaces\"\r\nimport UserLogged from \"../../utils/UserLogged\"\r\nimport ButtonBox from \"../../utils/ButtonBox\"\r\nimport ModalForm from \"./components/ModalForm\"\r\nimport JobCard from \"./components/JobCard\"\r\nimport { Container } from \"./style\"\r\nimport { useAuth } from \"../../../hooks/auth\"\r\nimport JobCardLoad from \"./components/JobCardLoad\"\r\n\r\ninterface IProps {\r\n\tpath: string\r\n\ttitleCallback: (title?: string) => void\r\n}\r\n\r\ninterface IJob {\r\n\tauthor?: {\r\n\t\tid: string\r\n\t}\r\n\tid: number\r\n\ttitle: string\r\n\tdescription: string\r\n\tpublished: boolean\r\n\tjobImage: {\r\n\t\timageUrl: string\r\n\t\tid: number\r\n\t}\r\n}\r\n\r\nexport default function JobsComponent(props: IProps) {\r\n\tconst { user } = useAuth()\r\n\r\n\tconst [dataModal, setDataModal] = useState({} as IJobFormData)\r\n\tconst [showModal, setShowModal] = useState(false)\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [jobs, setJobs] = useState<IJob[]>([])\r\n\tconst jobService = new JobService()\r\n\r\n\tconst openModal = () => setShowModal(true)\r\n\tconst closeModal = () => {\r\n\t\tsetShowModal(false)\r\n\t\tsetDataModal({} as IJobFormData)\r\n\t}\r\n\tconst editJob = async (id: number) => {\r\n\t\tconst jodFound = await jobService.get<IJob>(id)\r\n\t\tif (jodFound) {\r\n\t\t\tsetDataModal({\r\n\t\t\t\tid: jodFound.id,\r\n\t\t\t\ttitle: jodFound.title,\r\n\t\t\t\timageId: jodFound.jobImage.id,\r\n\t\t\t\tcontent: jodFound.description,\r\n\t\t\t\tpublished: jodFound.published,\r\n\t\t\t\tuserId: jodFound?.author?.id,\r\n\t\t\t})\r\n\r\n\t\t\topenModal()\r\n\t\t}\r\n\t}\r\n\tconst deleteJob = useCallback(\r\n\t\tasync (id: number) => {\r\n\t\t\tjobService.delete(id).then(() => {\r\n\t\t\t\tconst jobsFilter = jobs.filter(job => job.id !== id)\r\n\t\t\t\tsetJobs(jobsFilter)\r\n\t\t\t})\r\n\t\t},\r\n\t\t[jobs]\r\n\t)\r\n\r\n\tasync function getJobs() {\r\n\t\tprops.titleCallback()\r\n\t\tsetLoading(true)\r\n\t\tconst response = await jobService.list<IJob[]>()\r\n\t\tsetJobs(response)\r\n\r\n\t\tsetLoading(false)\r\n\t}\r\n\r\n\tconst handleSubmit = async (data: IJobFormData) => {\r\n\t\tdata.userId = user.id\r\n\t\tif (data.id) {\r\n\t\t\tdata.imageId = dataModal.imageId\r\n\t\t\tawait jobService.update(data)\r\n\t\t} else {\r\n\t\t\tawait jobService.create(data)\r\n\t\t}\r\n\r\n\t\tgetJobs()\r\n\t}\r\n\r\n\tconst handlePreview = async (data: IJobs) => {\r\n\t\tjobService.savePreview(data)\r\n\r\n\t\twindow.open(\"/jobs/preview\", \"_blank\")\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetJobs()\r\n\t}, [])\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<Container className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4\">\r\n\t\t\t\t\t\t<JobCardLoad />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4\">\r\n\t\t\t\t\t\t<JobCardLoad />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4\">\r\n\t\t\t\t\t\t<JobCardLoad />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4\">\r\n\t\t\t\t\t\t<JobCardLoad />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className=\"container\">\r\n\t\t\t<UserLogged>\r\n\t\t\t\t<ButtonBox handleClick={openModal}>\r\n\t\t\t\t\tAdicionar Vaga <FaPlus />\r\n\t\t\t\t</ButtonBox>\r\n\r\n\t\t\t\t{showModal && (\r\n\t\t\t\t\t<ModalForm\r\n\t\t\t\t\t\tdataModal={dataModal}\r\n\t\t\t\t\t\tshowModal={showModal}\r\n\t\t\t\t\t\tonCloseModal={closeModal}\r\n\t\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t\t\thandlePreview={handlePreview}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</UserLogged>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t{jobs.map(job => (\r\n\t\t\t\t\t<div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4\" key={job.id}>\r\n\t\t\t\t\t\t<JobCard editJob={editJob} deleteJob={deleteJob} {...job} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n}\r\n","import styled from \"styled-components\"\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tmargin-bottom: 64px;\r\n\r\n\t.col-image {\r\n\t\talign-self: center;\r\n\t\timg {\r\n\t\t\twidth: 90%;\r\n\t\t\tborder-radius: 5px;\r\n\t\t\tbox-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.1);\r\n\t\t}\r\n\r\n\t\tbutton {\r\n\t\t\tfloat: right;\r\n\t\t\tmargin-top: -30px;\r\n\t\t\tposition: relative;\r\n\t\t}\r\n\r\n\t\t@media (max-width: 576px) {\r\n\t\t\tbutton {\r\n\t\t\t\tposition: initial;\r\n\t\t\t\tfloat: initial;\r\n\t\t\t\tmargin: 16px auto;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\r\n\t\t\timg {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.col-description,\r\n\t.send-resume {\r\n\t\ttext-align: left;\r\n\t\tcolor: #444;\r\n\t\tfont-family: \"Montserrat\", Sans-serif;\r\n\t\tfont-size: 17px;\r\n\t\tfont-weight: 400;\r\n\t\tline-height: 1.7em;\r\n\r\n\t\tul {\r\n\t\t\tpadding-inline-start: 40px;\r\n\t\t}\r\n\t}\r\n\r\n\t.send-resume a {\r\n\t\tcolor: rgb(17, 89, 100);\r\n\t}\r\n`\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Skeleton from \"react-loading-skeleton\"\r\n\r\nimport JobService from \"../../../services/job-service\"\r\nimport IntroductionContent from \"../../utils/IntroductionContent\"\r\nimport Button from \"../../utils/Button\"\r\nimport Banner from \"../../utils/Banner\"\r\n\r\nimport { Container } from \"./style\"\r\nimport { Link } from \"gatsby\"\r\nimport ShareButtons from \"../../utils/ShareButtons\"\r\nimport SEO from \"../../utils/SEO\"\r\n\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\ninterface IProps {\r\n\tpath: string\r\n\tid?: string\r\n\ttitleCallback?: (title?: string) => void\r\n}\r\n\r\ninterface IJob {\r\n\tid: number\r\n\ttitle: string\r\n\tdescription: string\r\n\tjobImage: {\r\n\t\timageUrl: string\r\n\t}\r\n}\r\n\r\nfunction JobComponent({ id, titleCallback }: IProps) {\r\n\tconst jobService = new JobService()\r\n\tconst [job, setJob] = useState({} as IJob)\r\n\tconst { t, i18 } = useTranslation()\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function getJob() {\r\n\t\t\tlet job\r\n\r\n\t\t\tif (id == \"preview\") {\r\n\t\t\t\tjob = jobService.getPreview()\r\n\t\t\t} else {\r\n\t\t\t\tjob = await jobService.get<IJob>(id)\r\n\t\t\t}\r\n\r\n\t\t\tif (job) {\r\n\t\t\t\ttitleCallback(job.title)\r\n\t\t\t\tsetJob(job)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetJob()\r\n\t}, [])\r\n\r\n\tif (!job.id) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Skeleton height={300} />\r\n\t\t\t\t<div className=\"container mt-3 mb-3\">\r\n\t\t\t\t\t<Skeleton count={3} />\r\n\t\t\t\t\t<div className=\"row mt-3\">\r\n\t\t\t\t\t\t<div className=\"col-image col-6\" style={{ textAlign: \"center\" }}>\r\n\t\t\t\t\t\t\t<Skeleton count={1} height={200} width={200} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-xs-12\">\r\n\t\t\t\t\t\t\t<Skeleton count={15} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<SEO title={job.title} article={true} />\r\n\t\t\t<Banner titlePage={t(`jobs.titles.${job.title}`)} />\r\n\r\n\t\t\t<IntroductionContent\r\n\t\t\t\tsubtitle={\"Kivalita consulting\"}\r\n\t\t\t\ttitle={t(`jobs.titles.${job.title}`)}\r\n\t\t\t/>\r\n\r\n\t\t\t<Container className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-image col-sm-12 col-md-6\">\r\n\t\t\t\t\t\t<img src={job.jobImage.imageUrl} alt=\"Image job\" />\r\n\r\n\t\t\t\t\t\t<Link to=\"/career\">\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttitle={t(\"jobs.button\")}\r\n\t\t\t\t\t\t\t\tbgColor={\"#f4bf8c\"}\r\n\t\t\t\t\t\t\t\ttextColor={\"#fff\"}\r\n\t\t\t\t\t\t\t\tfontFamily=\"Poppins\"\r\n\t\t\t\t\t\t\t\tfontSize={18}\r\n\t\t\t\t\t\t\t\tfontWeight={600}\r\n\t\t\t\t\t\t\t\tpadding={\"18px 40px\"}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"col-description col-sm-12 col-md-6\"\r\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\r\n\t\t\t\t\t\t\t__html: t(`jobs.descriptions.${job.title}`),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></div>\r\n\t\t\t\t\t<p className=\"send-resume offset-md-4 offset-lg-6 col-sm-12 col-md-8 col-lg-6\">\r\n\t\t\t\t\t\t{t(\"jobs.resume\")}{\" \"}\r\n\t\t\t\t\t\t<a href=\"mailto:rh@kivalita.com.br\">rh@kivalita.com.br</a>\r\n\t\t\t\t\t\t<ShareButtons url={window.location.href} />\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default JobComponent\r\n","import React, { useState } from \"react\"\r\nimport { Router } from \"@reach/router\"\r\n\r\nimport Layout from \"../components/Layout\"\r\nimport JobsComponent from \"../components/pages/Jobs\"\r\nimport { AuthProvider } from \"../hooks/auth\"\r\nimport JobComponent from \"../components/pages/Job\"\r\nimport SEO from \"../components/utils/SEO\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\nconst Jobs = () => {\r\n\tconst { t, i18n } = useTranslation()\r\n\tconst [breadCrumbList, setBreadCrumb] = useState([\r\n\t\t{\r\n\t\t\turl: \"/\",\r\n\t\t\tname: \"Home\",\r\n\t\t\tisActive: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\turl: \"career\",\r\n\t\t\tname: t(\"breadCrumb.career\"),\r\n\t\t\tisActive: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\turl: \"jobs\",\r\n\t\t\tname: t(\"breadCrumb.job\"),\r\n\t\t\tisActive: false,\r\n\t\t},\r\n\t])\r\n\r\n\tconst changeBreadCrumb = () => {\r\n\t\tconsole.log(\"change\")\r\n\t\tif (breadCrumbList.length === 3) {\r\n\t\t\tconst translatedBreadCrumb = [\r\n\t\t\t\t{\r\n\t\t\t\t\turl: \"/\",\r\n\t\t\t\t\tname: \"Home\",\r\n\t\t\t\t\tisActive: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\turl: \"career\",\r\n\t\t\t\t\tname: t(\"breadCrumb.career\"),\r\n\t\t\t\t\tisActive: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\turl: \"jobs\",\r\n\t\t\t\t\tname: t(\"breadCrumb.job\"),\r\n\t\t\t\t\tisActive: false,\r\n\t\t\t\t},\r\n\t\t\t]\r\n\t\t\tsetBreadCrumb(translatedBreadCrumb)\r\n\t\t}\r\n\t}\r\n\r\n\tconst setTitle = (title?: string) => {\r\n\t\tconst newBreadCrumb = [...breadCrumbList]\r\n\t\tif (title) {\r\n\t\t\tnewBreadCrumb[2].isActive = true\r\n\t\t\tnewBreadCrumb.push({\r\n\t\t\t\turl: \"breadCrumbJob\",\r\n\t\t\t\tname: title,\r\n\t\t\t\tisActive: false,\r\n\t\t\t})\r\n\t\t\tsetBreadCrumb(newBreadCrumb)\r\n\t\t} else if (breadCrumbList.length > 3) {\r\n\t\t\tnewBreadCrumb[2].isActive = false\r\n\t\t\tnewBreadCrumb.pop()\r\n\t\t\tsetBreadCrumb(newBreadCrumb)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Layout breadCrumbList={breadCrumbList}>\r\n\t\t\t<SEO title=\"Vagas\"></SEO>\r\n\t\t\t<AuthProvider>\r\n\t\t\t\t<Router basepath=\"/jobs\">\r\n\t\t\t\t\t<JobsComponent titleCallback={setTitle} path=\"/\" />\r\n\t\t\t\t\t<JobComponent titleCallback={setTitle} path=\"/preview\" />\r\n\t\t\t\t</Router>\r\n\t\t\t</AuthProvider>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default Jobs\r\n"],"sourceRoot":""}